directive @create on OBJECT

type Post @create {
  ids: [ID]
}

extend type Mutation {
  createPost(input: CreatePostInput!): CreatePostOutput!
}

input CreatePostInput {
  data: CreatePostDataInput
  dryRun: Boolean
}

input CreatePostDataInput

union CreatePostOutput
  @output(fields: ["issues", "result"])
  @member(type: "CreatePostResult", signature: "result")
  @member(type: "CreatePostValidation", signature: "issues") =
  | CreatePostResult
  | CreatePostValidation

type CreatePostResult {
  result: Post!
}

type CreatePostValidation {
  issues: CreatePostValidationIssues!
}

scalar CreatePostValidationIssues @issues(input: "CreatePostInput")

directive @output(fields: [String!]!) on UNION

directive @member(type: String!, signature: String!) repeatable on UNION

directive @issues(input: String!) on SCALAR
