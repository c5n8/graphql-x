directive @relatedList on FIELD_DEFINITION

scalar DateTime

type Thing {
  x1(input: StuffListInput): [Stuff!]! @relatedList
  x2(input: String): [Stuff!] @relatedList
  x3: [[Stuff]] @relatedList
  x4: String! @relatedList
  x5: [String] @relatedList
}

type Stuff

input StuffListInput {
  where: StuffWhereInput
  cursor: StuffCursorInput
  orderBy: [StuffOrderByInput!]
  take: Int
  skip: Int
}

input StuffWhereInput {
  OR: [StuffWhereInput!]
  AND: [StuffWhereInput!]
  NOT: [StuffWhereInput!]
}

input StuffCursorInput

input StuffOrderByInput

input IDFilterInput {
  equals: ID
  in: [ID!]
  not: IDFilterInput
}

input StringFilterInput {
  equals: String
  in: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: StringFilterInput
}

scalar QueryMode

input FloatFilterInput {
  equals: Float
  in: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: FloatFilterInput
}

input IntFilterInput {
  equals: Int
  in: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilterInput
}

input BooleanFilterInput {
  equals: Boolean
  not: BooleanFilterInput
}

input DateTimeFilterInput {
  equals: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeFilterInput
}

input SortOrderInput {
  sort: SortOrder
  nulls: NullsOrder
}

scalar SortOrder

scalar NullsOrder

input OrderByRelationAggregateInput {
  _count: SortOrder
}
