directive @create on OBJECT

directive @readonly on FIELD_DEFINITION

scalar DateTime

type Post @create {
  id: ID!
  createdAt: DateTime @readonly
  title: String!
  body: String
  tags: [String!]
  category: Category
}

extend type Mutation {
  createPost(input: CreatePostInput!): CreatePostOutput!
}

input CreatePostInput {
  title: String!
  body: String
  tags: [String!]
  category: CreatePostCategoryRelationInput
}

input CreatePostCategoryRelationInput {
  id: ID!
}

union CreatePostOutput
  @member(type: "CreatePostResult", signatures: ["result"])
  @member(type: "CreatePostValidation", signatures: ["issues"]) =
  | CreatePostResult
  | CreatePostValidation

type CreatePostResult {
  result: Post!
}

type CreatePostValidation {
  issues: CreatePostValidationIssues!
}

scalar CreatePostValidationIssues @issues(input: "CreatePostInput")

type Category {
  id: ID!
}

directive @member(type: String, signatures: [String]) repeatable on UNION

directive @issues(input: String) on SCALAR
